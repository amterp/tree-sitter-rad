#!/usr/bin/env rad
---
Releases new version of the RSL tree sitter.

Releases new version of the RSL tree sitter.
Doc: https://tree-sitter.github.io/tree-sitter/creating-parsers/6-publishing.html
---
args:
    build b bool # Enable to build & test the tree sitter.
    no_clean "no-clean" C bool # Enable to not clean the go cache.
    version v string = "" # Specify to release a new version.
    no_push "no-push" P bool # Enable to not push.

    version regex "^[0-9]+\.[0-9]+\.[0-9]+$"

if build:
    $!`npm install`
    $!`tree-sitter generate -b`
    if not no_clean:
        $!`cd ./bindings/go && go clean -cache`
    $!`go test ./bindings/go`
    test_cmd = `tree-sitter test --show-fields`
    err = unsafe $test_cmd
    if err != 0:
        test_cmd += " --update"
        if confirm("Update tests? [y/n] > "):
            $!test_cmd

if not version:
    exit()

clean = unsafe $`git status --porcelain | grep -q .`
if not clean:
    $!`git add .`
    $!`git diff HEAD --compact-summary`
    if not confirm("You've got local changes, commit them ALL first? [y/n] > "):
        print(red("Exiting!"))
        print("Your", yellow("git status"), "isn't clean, first commit/shelve/clean any files before releasing a new version.")
        exit(1)
    else:
        $!`git add .`
        $!`git commit`

$!`tss version {version}`

$!`git diff HEAD --compact-summary`

if not confirm("Continue? [y/n] > "):
    print(red("Resetting and exiting..."))
    $!`git reset --hard`
    exit(1)

$!`git add .`

msg = "Release version {version}"
$!`git commit -m "{msg}"`
$!`git tag -a v{version} -m "{msg}"`

push_cmd = `git push origin main --tags`

if no_push:
    print("Not pushing, remember to do it yourself with", yellow(push_cmd))
else:
    $!push_cmd

print(green("Done!"))

// relies on `tss` being the 0.25+ version of tree-sitter CLI.
// as of writing, has to be compiled locally from source.
