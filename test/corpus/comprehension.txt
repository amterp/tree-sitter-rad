===
Comprehension no filter
===

[i * 2 for i in nums]

---

(source_file
  (expr_stmt
    (expr
      (primary_expr
        (list_comprehension
          expr: (expr
            (primary_expr
              (binary_op
                left: (primary_expr
                  (var_path
                    root: (identifier)))
                right: (primary_expr
                  (literal
                    (int))))))
          lefts: (for_lefts
            left: (identifier))
          right: (expr
            (primary_expr
              (var_path
                root: (identifier)))))))))

===
Comprehension w/ filter
===

[i * 2 for i in nums if i > 5]

---

(source_file
  (expr_stmt
    (expr
      (primary_expr
        (list_comprehension
          expr: (expr
            (primary_expr
              (binary_op
                left: (primary_expr
                  (var_path
                    root: (identifier)))
                right: (primary_expr
                  (literal
                    (int))))))
          lefts: (for_lefts
            left: (identifier))
          right: (expr
            (primary_expr
              (var_path
                root: (identifier))))
          condition: (expr
            (comparison_op
              left: (primary_expr
                (var_path
                  root: (identifier)))
              right: (primary_expr
                (literal
                  (int))))))))))
