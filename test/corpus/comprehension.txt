===
Comprehension no filter
===

[i * 2 for i in nums]

---

(source_file
  (expr
    (ternary_expr
      delegate: (or_expr
        delegate: (and_expr
          delegate: (compare_expr
            delegate: (add_expr
              delegate: (mult_expr
                delegate: (unary_expr
                  delegate: (indexed_expr
                    root: (primary_expr
                      (list_comprehension
                        expr: (expr
                          (ternary_expr
                            delegate: (or_expr
                              delegate: (and_expr
                                delegate: (compare_expr
                                  delegate: (add_expr
                                    delegate: (mult_expr
                                      left: (mult_expr
                                        delegate: (unary_expr
                                          delegate: (var_path)))
                                      right: (unary_expr
                                        delegate: (indexed_expr
                                          root: (primary_expr
                                            (literal
                                              (int))))))))))))
                        lefts: (for_lefts)
                        right: (expr
                          (ternary_expr
                            delegate: (or_expr
                              delegate: (and_expr
                                delegate: (compare_expr
                                  delegate: (add_expr
                                    delegate: (mult_expr
                                      delegate: (unary_expr
                                        delegate: (var_path)))))))))))))))))))))

===
Comprehension w/ filter
===

[i * 2 for i in nums if i > 5]

---

(source_file
  (expr
    (ternary_expr
      delegate: (or_expr
        delegate: (and_expr
          delegate: (compare_expr
            delegate: (add_expr
              delegate: (mult_expr
                delegate: (unary_expr
                  delegate: (indexed_expr
                    root: (primary_expr
                      (list_comprehension
                        expr: (expr
                          (ternary_expr
                            delegate: (or_expr
                              delegate: (and_expr
                                delegate: (compare_expr
                                  delegate: (add_expr
                                    delegate: (mult_expr
                                      left: (mult_expr
                                        delegate: (unary_expr
                                          delegate: (var_path)))
                                      right: (unary_expr
                                        delegate: (indexed_expr
                                          root: (primary_expr
                                            (literal
                                              (int))))))))))))
                        lefts: (for_lefts)
                        right: (expr
                          (ternary_expr
                            delegate: (or_expr
                              delegate: (and_expr
                                delegate: (compare_expr
                                  delegate: (add_expr
                                    delegate: (mult_expr
                                      delegate: (unary_expr
                                        delegate: (var_path)))))))))
                        condition: (expr
                          (ternary_expr
                            delegate: (or_expr
                              delegate: (and_expr
                                delegate: (compare_expr
                                  left: (compare_expr
                                    delegate: (add_expr
                                      delegate: (mult_expr
                                        delegate: (unary_expr
                                          delegate: (var_path)))))
                                  right: (add_expr
                                    delegate: (mult_expr
                                      delegate: (unary_expr
                                        delegate: (indexed_expr
                                          root: (primary_expr
                                            (literal
                                              (int))))))))))))))))))))))))
