===
Comprehension no filter
===

[i * 2 for i in nums]

---

(source_file
  (expr
    base: (primary_expr
      (list_comprehension
        expr: (expr
          base: (primary_expr
            (binary_op
              left: (expr
                base: (var_path))
              right: (expr
                base: (primary_expr
                  (literal
                    (int)))))))
        lefts: (for_lefts)
        right: (expr
          base: (var_path))))))

===
Comprehension w/ filter
===

[i * 2 for i in nums if i > 5]

---

(source_file
  (expr
    base: (primary_expr
      (list_comprehension
        expr: (expr
          base: (primary_expr
            (binary_op
              left: (expr
                base: (var_path))
              right: (expr
                base: (primary_expr
                  (literal
                    (int)))))))
        lefts: (for_lefts)
        right: (expr
          base: (var_path))
        condition: (expr
          base: (comparison_op
            left: (expr
              base: (var_path))
            right: (expr
              base: (primary_expr
                (literal
                  (int))))))))))
