===
Basic
===

a > 2 ? "true" : "false"

---

(source_file
  (expr
    delegate: (ternary_expr
      condition: (or_expr
        delegate: (and_expr
          delegate: (compare_expr
            left: (compare_expr
              delegate: (add_expr
                delegate: (mult_expr
                  delegate: (unary_expr
                    delegate: (var_path)))))
            right: (add_expr
              delegate: (mult_expr
                delegate: (unary_expr
                  delegate: (indexed_expr
                    root: (primary_expr
                      (literal
                        (int))))))))))
      true_branch: (expr
        delegate: (ternary_expr
          delegate: (or_expr
            delegate: (and_expr
              delegate: (compare_expr
                delegate: (add_expr
                  delegate: (mult_expr
                    delegate: (unary_expr
                      delegate: (indexed_expr
                        root: (primary_expr
                          (literal
                            (string
                              start: (string_start)
                              contents: (string_contents
                                content: (string_content))
                              end: (string_end)))))))))))))
      false_branch: (ternary_expr
        delegate: (or_expr
          delegate: (and_expr
            delegate: (compare_expr
              delegate: (add_expr
                delegate: (mult_expr
                  delegate: (unary_expr
                    delegate: (indexed_expr
                      root: (primary_expr
                        (literal
                          (string
                            start: (string_start)
                            contents: (string_contents
                              content: (string_content))
                            end: (string_end)))))))))))))))

===
Assignment
===

b = a > 2 ? "true" : "false"

---

(source_file
  (assign
    left: (var_path)
    right: (expr
      delegate: (ternary_expr
        condition: (or_expr
          delegate: (and_expr
            delegate: (compare_expr
              left: (compare_expr
                delegate: (add_expr
                  delegate: (mult_expr
                    delegate: (unary_expr
                      delegate: (var_path)))))
              right: (add_expr
                delegate: (mult_expr
                  delegate: (unary_expr
                    delegate: (indexed_expr
                      root: (primary_expr
                        (literal
                          (int))))))))))
        true_branch: (expr
          delegate: (ternary_expr
            delegate: (or_expr
              delegate: (and_expr
                delegate: (compare_expr
                  delegate: (add_expr
                    delegate: (mult_expr
                      delegate: (unary_expr
                        delegate: (indexed_expr
                          root: (primary_expr
                            (literal
                              (string
                                start: (string_start)
                                contents: (string_contents
                                  content: (string_content))
                                end: (string_end)))))))))))))
        false_branch: (ternary_expr
          delegate: (or_expr
            delegate: (and_expr
              delegate: (compare_expr
                delegate: (add_expr
                  delegate: (mult_expr
                    delegate: (unary_expr
                      delegate: (indexed_expr
                        root: (primary_expr
                          (literal
                            (string
                              start: (string_start)
                              contents: (string_contents
                                content: (string_content))
                              end: (string_end))))))))))))))))

===
Nested
===

b = a > 2 ? b > 2 ? 1 : 0 : c > 2 ? 1 : 0

---

(source_file
  (assign
    left: (var_path)
    right: (expr
      delegate: (ternary_expr
        condition: (or_expr
          delegate: (and_expr
            delegate: (compare_expr
              left: (compare_expr
                delegate: (add_expr
                  delegate: (mult_expr
                    delegate: (unary_expr
                      delegate: (var_path)))))
              right: (add_expr
                delegate: (mult_expr
                  delegate: (unary_expr
                    delegate: (indexed_expr
                      root: (primary_expr
                        (literal
                          (int))))))))))
        true_branch: (expr
          delegate: (ternary_expr
            condition: (or_expr
              delegate: (and_expr
                delegate: (compare_expr
                  left: (compare_expr
                    delegate: (add_expr
                      delegate: (mult_expr
                        delegate: (unary_expr
                          delegate: (var_path)))))
                  right: (add_expr
                    delegate: (mult_expr
                      delegate: (unary_expr
                        delegate: (indexed_expr
                          root: (primary_expr
                            (literal
                              (int))))))))))
            true_branch: (expr
              delegate: (ternary_expr
                delegate: (or_expr
                  delegate: (and_expr
                    delegate: (compare_expr
                      delegate: (add_expr
                        delegate: (mult_expr
                          delegate: (unary_expr
                            delegate: (indexed_expr
                              root: (primary_expr
                                (literal
                                  (int))))))))))))
            false_branch: (ternary_expr
              delegate: (or_expr
                delegate: (and_expr
                  delegate: (compare_expr
                    delegate: (add_expr
                      delegate: (mult_expr
                        delegate: (unary_expr
                          delegate: (indexed_expr
                            root: (primary_expr
                              (literal
                                (int)))))))))))))
        false_branch: (ternary_expr
          condition: (or_expr
            delegate: (and_expr
              delegate: (compare_expr
                left: (compare_expr
                  delegate: (add_expr
                    delegate: (mult_expr
                      delegate: (unary_expr
                        delegate: (var_path)))))
                right: (add_expr
                  delegate: (mult_expr
                    delegate: (unary_expr
                      delegate: (indexed_expr
                        root: (primary_expr
                          (literal
                            (int))))))))))
          true_branch: (expr
            delegate: (ternary_expr
              delegate: (or_expr
                delegate: (and_expr
                  delegate: (compare_expr
                    delegate: (add_expr
                      delegate: (mult_expr
                        delegate: (unary_expr
                          delegate: (indexed_expr
                            root: (primary_expr
                              (literal
                                (int))))))))))))
          false_branch: (ternary_expr
            delegate: (or_expr
              delegate: (and_expr
                delegate: (compare_expr
                  delegate: (add_expr
                    delegate: (mult_expr
                      delegate: (unary_expr
                        delegate: (indexed_expr
                          root: (primary_expr
                            (literal
                              (int))))))))))))))))

===
Multiline
:error
===

c = a < 10
    ? "smaller!"
    : "bigger!"

---


