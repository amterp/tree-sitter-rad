===
1
===

del a

---

(source_file
  (del_stmt
    right: (var_path)))

===
2+
===

del a, b, c

---

(source_file
  (del_stmt
    right: (var_path)
    right: (var_path)
    right: (var_path)))

===
2+ trailing
===

del a, b, c, 

---

(source_file
  (del_stmt
    right: (var_path)
    right: (var_path)
    right: (var_path)))

===
Multiline delete fails
:error
===

del a,
    b,
    c,

---



===
Path index
===

del a[0]

---

(source_file
  (del_stmt
    right: (var_path
      indexing: (expr
        (ternary_expr
          delegate: (or_expr
            delegate: (and_expr
              delegate: (compare_expr
                delegate: (add_expr
                  delegate: (mult_expr
                    delegate: (unary_expr
                      delegate: (indexed_expr
                        root: (primary_expr
                          (literal
                            (int)))))))))))))))

===
Path map lookup
===

del a["foo"]

---

(source_file
  (del_stmt
    right: (var_path
      indexing: (expr
        (ternary_expr
          delegate: (or_expr
            delegate: (and_expr
              delegate: (compare_expr
                delegate: (add_expr
                  delegate: (mult_expr
                    delegate: (unary_expr
                      delegate: (indexed_expr
                        root: (primary_expr
                          (literal
                            (string
                              start: (string_start)
                              contents: (string_contents
                                content: (string_content))
                              end: (string_end))))))))))))))))

===
Path map dot syntax
===

del a.foo

---

(source_file
  (del_stmt
    right: (var_path)))

===
2+ paths
===

del a.foo, b[1], c["bar"]

---

(source_file
  (del_stmt
    right: (var_path)
    right: (var_path
      indexing: (expr
        (ternary_expr
          delegate: (or_expr
            delegate: (and_expr
              delegate: (compare_expr
                delegate: (add_expr
                  delegate: (mult_expr
                    delegate: (unary_expr
                      delegate: (indexed_expr
                        root: (primary_expr
                          (literal
                            (int)))))))))))))
    right: (var_path
      indexing: (expr
        (ternary_expr
          delegate: (or_expr
            delegate: (and_expr
              delegate: (compare_expr
                delegate: (add_expr
                  delegate: (mult_expr
                    delegate: (unary_expr
                      delegate: (indexed_expr
                        root: (primary_expr
                          (literal
                            (string
                              start: (string_start)
                              contents: (string_contents
                                content: (string_content))
                              end: (string_end))))))))))))))))
