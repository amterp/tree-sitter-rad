===
All
===

a[:]
a[1:]
a[:-2]
a[a:b]
a[a:]
a[:b]

---

(source_file
  (expr_stmt
    (primary_expr
      (var_path
        root: (identifier)
        indexing: (slice))))
  (expr_stmt
    (primary_expr
      (var_path
        root: (identifier)
        indexing: (slice
          start: (primary_expr
            (literal
              (int)))))))
  (expr_stmt
    (primary_expr
      (var_path
        root: (identifier)
        indexing: (slice
          end: (primary_expr
            (unary_op
              arg: (primary_expr
                (literal
                  (int)))))))))
  (expr_stmt
    (primary_expr
      (var_path
        root: (identifier)
        indexing: (slice
          start: (primary_expr
            (var_path
              root: (identifier)))
          end: (primary_expr
            (var_path
              root: (identifier)))))))
  (expr_stmt
    (primary_expr
      (var_path
        root: (identifier)
        indexing: (slice
          start: (primary_expr
            (var_path
              root: (identifier)))))))
  (expr_stmt
    (primary_expr
      (var_path
        root: (identifier)
        indexing: (slice
          end: (primary_expr
            (var_path
              root: (identifier))))))))

===
With ternaries
===

a[a > 2 ? 2 : 3 : a > 2 ? 2 : 3]

---

(source_file
  (expr_stmt
    (primary_expr
      (var_path
        root: (identifier)
        indexing: (slice
          start: (ternary
            condition: (comparison_op
              (primary_expr
                (var_path
                  root: (identifier)))
              (primary_expr
                (literal
                  (int))))
            true_branch: (primary_expr
              (literal
                (int)))
            false_branch: (primary_expr
              (literal
                (int))))
          end: (ternary
            condition: (comparison_op
              (primary_expr
                (var_path
                  root: (identifier)))
              (primary_expr
                (literal
                  (int))))
            true_branch: (primary_expr
              (literal
                (int)))
            false_branch: (primary_expr
              (literal
                (int)))))))))
