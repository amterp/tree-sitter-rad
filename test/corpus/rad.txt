===
Rad simple
===

rad url:
    fields foo, bar

---

(source_file
  (rad_block
    rad_type: (rad_keyword)
    source: (expr
      base: (var_path))
    stmt: (rad_field_stmt)))

===
Request simple
===

request url:
    fields foo, bar

---

(source_file
  (rad_block
    rad_type: (request_keyword)
    source: (expr
      base: (var_path))
    stmt: (rad_field_stmt)))

===
Display simple
===

display:
    fields foo, bar

---

(source_file
  (rad_block
    rad_type: (display_keyword)
    stmt: (rad_field_stmt)))

===
Rad sort simple
===

rad url:
    fields foo, bar
    sort

---

(source_file
  (rad_block
    rad_type: (rad_keyword)
    source: (expr
      base: (var_path))
    stmt: (rad_field_stmt)
    stmt: (rad_sort_stmt)))

===
Rad sort complex
===

rad url:
    fields foo, bar
    sort foo desc, bar asc, blah, bloop

---

(source_file
  (rad_block
    rad_type: (rad_keyword)
    source: (expr
      base: (var_path))
    stmt: (rad_field_stmt)
    stmt: (rad_sort_stmt
      specifier: (rad_sort_specifier
        first: (immediate_identifier))
      specifier: (rad_sort_specifier
        first: (immediate_identifier))
      specifier: (rad_sort_specifier
        first: (immediate_identifier))
      specifier: (rad_sort_specifier
        first: (immediate_identifier)))))

===
Rad map one
===

rad url:
    fields foo, bar
    foo:
        map a -> "{a * 100}%"

---

(source_file
  (rad_block
    rad_type: (rad_keyword)
    source: (expr
      base: (var_path))
    stmt: (rad_field_stmt)
    stmt: (rad_field_modifier_stmt
      mod_stmt: (rad_field_mod_map
        lambda: (lambda
          expr: (expr
            base: (primary_expr
              (literal
                (string
                  start: (string_start)
                  contents: (string_contents
                    interpolation: (interpolation
                      expr: (expr
                        base: (primary_expr
                          (binary_op
                            left: (expr
                              base: (var_path))
                            right: (expr
                              base: (primary_expr
                                (literal
                                  (int))))))))
                    content: (string_content))
                  end: (string_end))))))))))

===
Rad map more
===

rad url:
    fields foo, bar
    foo, bar, woo:
        map a -> "{a * 100}%"

---

(source_file
  (rad_block
    rad_type: (rad_keyword)
    source: (expr
      base: (var_path))
    stmt: (rad_field_stmt)
    stmt: (rad_field_modifier_stmt
      mod_stmt: (rad_field_mod_map
        lambda: (lambda
          expr: (expr
            base: (primary_expr
              (literal
                (string
                  start: (string_start)
                  contents: (string_contents
                    interpolation: (interpolation
                      expr: (expr
                        base: (primary_expr
                          (binary_op
                            left: (expr
                              base: (var_path))
                            right: (expr
                              base: (primary_expr
                                (literal
                                  (int))))))))
                    content: (string_content))
                  end: (string_end))))))))))

===
Rad color
===

rad url:
    fields foo, bar
    foo, bar:
        color "red" "Denmark"
        color my_color my_country

---

(source_file
  (rad_block
    rad_type: (rad_keyword)
    source: (expr
      base: (var_path))
    stmt: (rad_field_stmt)
    stmt: (rad_field_modifier_stmt
      mod_stmt: (rad_field_mod_color
        color: (expr
          base: (primary_expr
            (literal
              (string
                start: (string_start)
                contents: (string_contents
                  content: (string_content))
                end: (string_end)))))
        regex: (expr
          base: (primary_expr
            (literal
              (string
                start: (string_start)
                contents: (string_contents
                  content: (string_content))
                end: (string_end))))))
      mod_stmt: (rad_field_mod_color
        color: (expr
          base: (var_path))
        regex: (expr
          base: (primary_expr))))))

===
Rad if stmt
===

rad url:
    fields foo, bar
    if blue:
        foo, bar:
            color "red" "Denmark"
            color my_color my_country
    else if green:
        fields yo
        sort
    else:
        bar:
            map a -> a * 10
            color a b

---

(source_file
  (rad_block
    rad_type: (rad_keyword)
    source: (expr
      base: (var_path))
    stmt: (rad_field_stmt)
    stmt: (rad_if_stmt
      alt: (rad_if_alt
        condition: (expr
          base: (var_path))
        stmt: (rad_field_modifier_stmt
          mod_stmt: (rad_field_mod_color
            color: (expr
              base: (primary_expr
                (literal
                  (string
                    start: (string_start)
                    contents: (string_contents
                      content: (string_content))
                    end: (string_end)))))
            regex: (expr
              base: (primary_expr
                (literal
                  (string
                    start: (string_start)
                    contents: (string_contents
                      content: (string_content))
                    end: (string_end))))))
          mod_stmt: (rad_field_mod_color
            color: (expr
              base: (var_path))
            regex: (expr
              base: (var_path)))))
      alt: (rad_if_alt
        condition: (expr
          base: (var_path))
        stmt: (rad_field_stmt)
        stmt: (rad_sort_stmt))
      alt: (rad_else_alt
        stmt: (rad_field_modifier_stmt
          mod_stmt: (rad_field_mod_map
            lambda: (lambda
              expr: (expr
                base: (primary_expr
                  (binary_op
                    left: (expr
                      base: (var_path))
                    right: (expr
                      base: (primary_expr
                        (literal
                          (int)))))))))
          mod_stmt: (rad_field_mod_color
            color: (expr
              base: (var_path))
            regex: (expr
              base: (primary_expr))))))))
