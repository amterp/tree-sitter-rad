===
Arithmetic times precedence
===

a = 2 * 3 + 3
a = 2 + 3 * 3

---

(source_file
  (assign
    left: (var_path)
    right: (expr
      base: (primary_expr
        (binary_op
          left: (expr
            base: (primary_expr
              (binary_op
                left: (expr
                  base: (primary_expr
                    (literal
                      (int))))
                right: (expr
                  base: (primary_expr
                    (literal
                      (int)))))))
          right: (expr
            base: (primary_expr
              (literal
                (int))))))))
  (assign
    left: (var_path)
    right: (expr
      base: (primary_expr
        (binary_op
          left: (expr
            base: (primary_expr
              (literal
                (int))))
          right: (expr
            base: (primary_expr
              (binary_op
                left: (expr
                  base: (primary_expr
                    (literal
                      (int))))
                right: (expr
                  base: (primary_expr
                    (literal
                      (int))))))))))))

===
Arithmetic all
===

a = 2 + 3 - 4 * 5 / 2 + 4 / 3 % 2

---

(source_file
  (assign
    left: (var_path)
    right: (expr
      base: (primary_expr
        (binary_op
          left: (expr
            base: (primary_expr
              (binary_op
                left: (expr
                  base: (primary_expr
                    (binary_op
                      left: (expr
                        base: (primary_expr
                          (literal
                            (int))))
                      right: (expr
                        base: (primary_expr
                          (literal
                            (int)))))))
                right: (expr
                  base: (primary_expr
                    (binary_op
                      left: (expr
                        base: (primary_expr
                          (binary_op
                            left: (expr
                              base: (primary_expr
                                (literal
                                  (int))))
                            right: (expr
                              base: (primary_expr
                                (literal
                                  (int)))))))
                      right: (expr
                        base: (primary_expr
                          (literal
                            (int))))))))))
          right: (expr
            base: (primary_expr
              (binary_op
                left: (expr
                  base: (primary_expr
                    (binary_op
                      left: (expr
                        base: (primary_expr
                          (literal
                            (int))))
                      right: (expr
                        base: (primary_expr
                          (literal
                            (int)))))))
                right: (expr
                  base: (primary_expr
                    (literal
                      (int))))))))))))
