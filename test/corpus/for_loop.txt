===
Just i
===

for i in nums:
    a = 2
    b = 2

---

(source_file
  (for_loop
    lefts: (for_lefts)
    right: (expr
      delegate: (ternary_expr
        delegate: (or_expr
          delegate: (and_expr
            delegate: (compare_expr
              delegate: (add_expr
                delegate: (mult_expr
                  delegate: (unary_expr
                    delegate: (var_path)))))))))
    stmt: (assign
      left: (var_path)
      right: (expr
        delegate: (ternary_expr
          delegate: (or_expr
            delegate: (and_expr
              delegate: (compare_expr
                delegate: (add_expr
                  delegate: (mult_expr
                    delegate: (unary_expr
                      delegate: (indexed_expr
                        root: (primary_expr
                          (literal
                            (int)))))))))))))
    stmt: (assign
      left: (var_path)
      right: (expr
        delegate: (ternary_expr
          delegate: (or_expr
            delegate: (and_expr
              delegate: (compare_expr
                delegate: (add_expr
                  delegate: (mult_expr
                    delegate: (unary_expr
                      delegate: (indexed_expr
                        root: (primary_expr
                          (literal
                            (int)))))))))))))))

===
i, item
===

for i, item in nums:
    a = 2
    b = 2

---

(source_file
  (for_loop
    lefts: (for_lefts)
    right: (expr
      delegate: (ternary_expr
        delegate: (or_expr
          delegate: (and_expr
            delegate: (compare_expr
              delegate: (add_expr
                delegate: (mult_expr
                  delegate: (unary_expr
                    delegate: (var_path)))))))))
    stmt: (assign
      left: (var_path)
      right: (expr
        delegate: (ternary_expr
          delegate: (or_expr
            delegate: (and_expr
              delegate: (compare_expr
                delegate: (add_expr
                  delegate: (mult_expr
                    delegate: (unary_expr
                      delegate: (indexed_expr
                        root: (primary_expr
                          (literal
                            (int)))))))))))))
    stmt: (assign
      left: (var_path)
      right: (expr
        delegate: (ternary_expr
          delegate: (or_expr
            delegate: (and_expr
              delegate: (compare_expr
                delegate: (add_expr
                  delegate: (mult_expr
                    delegate: (unary_expr
                      delegate: (indexed_expr
                        root: (primary_expr
                          (literal
                            (int)))))))))))))))

===
break, continue
===

for i in nums:
  a = 2
  break

for i in nums:
  a = 2
  continue

---

(source_file
  (for_loop
    lefts: (for_lefts)
    right: (expr
      delegate: (ternary_expr
        delegate: (or_expr
          delegate: (and_expr
            delegate: (compare_expr
              delegate: (add_expr
                delegate: (mult_expr
                  delegate: (unary_expr
                    delegate: (var_path)))))))))
    stmt: (assign
      left: (var_path)
      right: (expr
        delegate: (ternary_expr
          delegate: (or_expr
            delegate: (and_expr
              delegate: (compare_expr
                delegate: (add_expr
                  delegate: (mult_expr
                    delegate: (unary_expr
                      delegate: (indexed_expr
                        root: (primary_expr
                          (literal
                            (int)))))))))))))
    stmt: (break_stmt))
  (for_loop
    lefts: (for_lefts)
    right: (expr
      delegate: (ternary_expr
        delegate: (or_expr
          delegate: (and_expr
            delegate: (compare_expr
              delegate: (add_expr
                delegate: (mult_expr
                  delegate: (unary_expr
                    delegate: (var_path)))))))))
    stmt: (assign
      left: (var_path)
      right: (expr
        delegate: (ternary_expr
          delegate: (or_expr
            delegate: (and_expr
              delegate: (compare_expr
                delegate: (add_expr
                  delegate: (mult_expr
                    delegate: (unary_expr
                      delegate: (indexed_expr
                        root: (primary_expr
                          (literal
                            (int)))))))))))))
    stmt: (continue_stmt)))
