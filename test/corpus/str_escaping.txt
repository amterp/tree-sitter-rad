===
Newline, tab
===

"\t\n"

---

(source_file
  (expr
    (ternary_expr
      delegate: (or_expr
        delegate: (and_expr
          delegate: (compare_expr
            delegate: (add_expr
              delegate: (mult_expr
                delegate: (unary_expr
                  delegate: (indexed_expr
                    root: (primary_expr
                      (literal
                        (string
                          start: (string_start)
                          contents: (string_contents
                            tab: (esc_tab)
                            newline: (esc_newline))
                          end: (string_end))))))))))))))

===
Interpolation
===

"\{hello}"

---

(source_file
  (expr
    (ternary_expr
      delegate: (or_expr
        delegate: (and_expr
          delegate: (compare_expr
            delegate: (add_expr
              delegate: (mult_expr
                delegate: (unary_expr
                  delegate: (indexed_expr
                    root: (primary_expr
                      (literal
                        (string
                          start: (string_start)
                          contents: (string_contents
                            open_bracket: (esc_open_bracket)
                            content: (string_content))
                          end: (string_end))))))))))))))

===
Own delimiter
===

"\"hello\""
'\'hello\''
`\`hello\``

---

(source_file
  (expr
    (ternary_expr
      delegate: (or_expr
        delegate: (and_expr
          delegate: (compare_expr
            delegate: (add_expr
              delegate: (mult_expr
                delegate: (unary_expr
                  delegate: (indexed_expr
                    root: (primary_expr
                      (literal
                        (string
                          start: (string_start)
                          contents: (string_contents
                            double_quote: (esc_double_quote)
                            content: (string_content)
                            double_quote: (esc_double_quote))
                          end: (string_end)))))))))))))
  (expr
    (ternary_expr
      delegate: (or_expr
        delegate: (and_expr
          delegate: (compare_expr
            delegate: (add_expr
              delegate: (mult_expr
                delegate: (unary_expr
                  delegate: (indexed_expr
                    root: (primary_expr
                      (literal
                        (string
                          start: (string_start)
                          contents: (string_contents
                            single_quote: (esc_single_quote)
                            content: (string_content)
                            single_quote: (esc_single_quote))
                          end: (string_end)))))))))))))
  (expr
    (ternary_expr
      delegate: (or_expr
        delegate: (and_expr
          delegate: (compare_expr
            delegate: (add_expr
              delegate: (mult_expr
                delegate: (unary_expr
                  delegate: (indexed_expr
                    root: (primary_expr
                      (literal
                        (string
                          start: (string_start)
                          contents: (string_contents
                            backtick: (esc_backtick)
                            content: (string_content)
                            backtick: (esc_backtick))
                          end: (string_end))))))))))))))
