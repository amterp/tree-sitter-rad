===
Complete
===

#!/usr/bin/env rad
---
this is a file
header

whoa! hello
---
args:
    name string
    age int = 30 # An age.
    employed bool
    foo string[] = ["blah", "bloop"]
    bar "BAR" b int[] = [4, 5]

    name enum ["alice", "bob"]
    name regex "[A-Z][a-z]*"

a = 2
a = "hello"
a = 3.14
a = true
a = [1, 2, 3]
a = {"x": 1, y: 2}

a = 3 + 5 * 3 - 1 / 0.01 % 2
a += 2
a -= 1
a *= 5
a /= 2
a %= 2

a = `hello {upper("alice")}`
print(a)

f1 = json[].id
f2 = json.hello[].blah.*.woop

rad url:
    fields f1, f2
    sort f1 desc, f2
    sort

    if a > b:
        sort f2, f1
    
    f1:
        map a -> a * 2

    f1, f2:
        color "red" ".*"

if bah > 5:
    hello = bloop

    if blah == 2:
        yoink += 2
    else if blah == 3:
        boom = "haha"

request url:
    fields f1

display:
    fields f2, f1, f3

area = [width[i] * height[i] for i in range(width)]

numbers = [1, 2, 3]
print(join(numbers, "... "))
print(join(numbers, "... ", "Okay I'll count. "))
print(join(numbers, "... ", "Okay I'll count. ", "!"))

a = nums[:]
a = nums[1:]
a = nums[1:2]
a = nums[:2]

my_headers = {
    "Authorization": "Bearer {token}",
}
response = http_post(url, body, headers=my_headers)

// text = """
// This is an
// example of text
// that "may contain quotes"!
// """
// print(text)

text = r"Hello\n{name}"
text = r'Hello\n{name}'
text = r`Hello\n{name}`

url, name = pick_from_resource("./resources/websites.json", website)
print("url: {url}, name: {name}")

$!`ls`

cmd = `curl {url}`
$cmd
fail:
    print("Oh no, curl failed!")

$cmd
recover:
    print("Oh no, curl failed!")

unsafe $`ls`

code = $!cmd

code, stdout = $!cmd

code, stdout, stderr = $!cmd

_, _, stderr = $!cmd

quiet $!`touch {filename}.txt`

unsafe quiet $`touch {filename}.txt`
quiet unsafe $`touch {filename}.txt`

defer:
    $!`mv notes-tmp.txt notes.txt`
    print("Moved back!")

$!`sed -i '' "s/Version = .*/Version = {version}/" {path}`
errdefer:
    print("Undoing bump...")
    $!`git checkout -- {path}`

if false:  // failure simulation point 1
    print("Oh no! ERROR!")
    exit(1)

$!`git add {path}`
errdefer:
    print("Resetting {path}...")
    _, _ = $!`git reset {path}`

if false:  // failure simulation point 2
    print("Bah! ERROR!")
    exit(1)

$!`git commit -m "Bump version to {version}"`

---

(source_file
  (shebang)
  (file_header
    contents: (file_header_contents))
  (arg_block
    declaration: (arg_declaration
      arg_name: (identifier)
      type: (string_type))
    declaration: (arg_declaration
      arg_name: (identifier)
      type: (int_type)
      default: (int_arg
        value: (int))
      comment: (comment_text))
    declaration: (arg_declaration
      arg_name: (identifier)
      type: (bool_type))
    declaration: (arg_declaration
      arg_name: (identifier)
      type: (string_list_type)
      default: (string_list
        list_entry: (string
          start: (string_start)
          contents: (string_contents
            content: (string_content))
          end: (string_end))
        list_entry: (string
          start: (string_start)
          contents: (string_contents
            content: (string_content))
          end: (string_end))))
    declaration: (arg_declaration
      arg_name: (identifier)
      rename: (string
        start: (string_start)
        contents: (string_contents
          content: (string_content))
        end: (string_end))
      shorthand: (shorthand_flag)
      type: (int_list_type)
      default: (int_list
        list_entry: (int_arg
          value: (int))
        list_entry: (int_arg
          value: (int))))
    enum_constraint: (arg_enum_constraint
      arg_name: (identifier)
      values: (string_list
        list_entry: (string
          start: (string_start)
          contents: (string_contents
            content: (string_content))
          end: (string_end))
        list_entry: (string
          start: (string_start)
          contents: (string_contents
            content: (string_content))
          end: (string_end))))
    regex_constraint: (arg_regex_constraint
      arg_name: (identifier)
      regex: (string
        start: (string_start)
        contents: (string_contents
          content: (string_content))
        end: (string_end))))
  (assign
    left: (var_path
      root: (identifier))
    right: (expr
      (primary_expr
        (literal
          (int)))))
  (assign
    left: (var_path
      root: (identifier))
    right: (expr
      (primary_expr
        (literal
          (string
            start: (string_start)
            contents: (string_contents
              content: (string_content))
            end: (string_end))))))
  (assign
    left: (var_path
      root: (identifier))
    right: (expr
      (primary_expr
        (literal
          (float)))))
  (assign
    left: (var_path
      root: (identifier))
    right: (expr
      (primary_expr
        (literal
          (bool)))))
  (assign
    left: (var_path
      root: (identifier))
    right: (expr
      (primary_expr
        (literal
          (list
            list_entry: (expr
              (primary_expr
                (literal
                  (int))))
            list_entry: (expr
              (primary_expr
                (literal
                  (int))))
            list_entry: (expr
              (primary_expr
                (literal
                  (int)))))))))
  (assign
    left: (var_path
      root: (identifier))
    right: (expr
      (primary_expr
        (literal
          (map
            map_entry: (map_entry
              key: (expr
                (primary_expr
                  (literal
                    (string
                      start: (string_start)
                      contents: (string_contents
                        content: (string_content))
                      end: (string_end)))))
              value: (expr
                (primary_expr
                  (literal
                    (int)))))
            map_entry: (map_entry
              key: (expr
                (primary_expr
                  (var_path
                    root: (identifier))))
              value: (expr
                (primary_expr
                  (literal
                    (int))))))))))
  (assign
    left: (var_path
      root: (identifier))
    right: (expr
      (primary_expr
        (binary_op
          left: (primary_expr
            (binary_op
              left: (primary_expr
                (literal
                  (int)))
              right: (primary_expr
                (binary_op
                  left: (primary_expr
                    (literal
                      (int)))
                  right: (primary_expr
                    (literal
                      (int)))))))
          right: (primary_expr
            (binary_op
              left: (primary_expr
                (binary_op
                  left: (primary_expr
                    (literal
                      (int)))
                  right: (primary_expr
                    (literal
                      (float)))))
              right: (primary_expr
                (literal
                  (int)))))))))
  (compound_assign
    left: (var_path
      root: (identifier))
    right: (expr
      (primary_expr
        (literal
          (int)))))
  (compound_assign
    left: (var_path
      root: (identifier))
    right: (expr
      (primary_expr
        (literal
          (int)))))
  (compound_assign
    left: (var_path
      root: (identifier))
    right: (expr
      (primary_expr
        (literal
          (int)))))
  (compound_assign
    left: (var_path
      root: (identifier))
    right: (expr
      (primary_expr
        (literal
          (int)))))
  (compound_assign
    left: (var_path
      root: (identifier))
    right: (expr
      (primary_expr
        (literal
          (int)))))
  (assign
    left: (var_path
      root: (identifier))
    right: (expr
      (primary_expr
        (literal
          (string
            start: (string_start)
            contents: (string_contents
              content: (string_content))
            contents: (interpolation
              expr: (expr
                (primary_expr
                  (call
                    func: (identifier)
                    arg: (expr
                      (primary_expr
                        (literal
                          (string
                            start: (string_start)
                            contents: (string_contents
                              content: (string_content))
                            end: (string_end)))))))))
            end: (string_end))))))
  (expr_stmt
    (expr
      (primary_expr
        (call
          func: (identifier)
          arg: (expr
            (primary_expr
              (var_path
                root: (identifier))))))))
  (assign
    left: (var_path
      root: (identifier))
    right: (json_path
      (identifier)))
  (assign
    left: (var_path
      root: (identifier))
    right: (json_path
      (identifier)
      (identifier)
      (identifier)))
  (rad_block
    rad_type: (rad_keyword)
    source: (expr
      (primary_expr
        (var_path
          root: (identifier))))
    (rad_field_stmt
      (identifier)
      (identifier))
    (rad_sort_stmt
      (identifier)
      (identifier))
    (rad_sort_stmt)
    (rad_if_stmt
      condition: (expr
        (comparison_op
          (primary_expr
            (var_path
              root: (identifier)))
          (primary_expr
            (var_path
              root: (identifier)))))
      (rad_sort_stmt
        (identifier)
        (identifier)))
    (rad_field_modifier_stmt
      (identifier)
      (rad_field_mod_map
        (lambda
          (identifier)
          (expr
            (primary_expr
              (binary_op
                left: (primary_expr
                  (var_path
                    root: (identifier)))
                right: (primary_expr
                  (literal
                    (int)))))))))
    (rad_field_modifier_stmt
      (identifier)
      (identifier)
      (rad_field_mod_color
        (expr
          (primary_expr
            (literal
              (string
                start: (string_start)
                contents: (string_contents
                  content: (string_content))
                end: (string_end)))))
        (expr
          (primary_expr
            (literal
              (string
                start: (string_start)
                contents: (string_contents
                  content: (string_content))
                end: (string_end))))))))
  (if_stmt
    condition: (expr
      (comparison_op
        (primary_expr
          (var_path
            root: (identifier)))
        (primary_expr
          (literal
            (int)))))
    (assign
      left: (var_path
        root: (identifier))
      right: (expr
        (primary_expr
          (var_path
            root: (identifier)))))
    (if_stmt
      condition: (expr
        (comparison_op
          (primary_expr
            (var_path
              root: (identifier)))
          (primary_expr
            (literal
              (int)))))
      (compound_assign
        left: (var_path
          root: (identifier))
        right: (expr
          (primary_expr
            (literal
              (int)))))
      alternative: (elif_clause
        condition: (expr
          (comparison_op
            (primary_expr
              (var_path
                root: (identifier)))
            (primary_expr
              (literal
                (int)))))
        (assign
          left: (var_path
            root: (identifier))
          right: (expr
            (primary_expr
              (literal
                (string
                  start: (string_start)
                  contents: (string_contents
                    content: (string_content))
                  end: (string_end)))))))))
  (rad_block
    rad_type: (request_keyword)
    source: (expr
      (primary_expr
        (var_path
          root: (identifier))))
    (rad_field_stmt
      (identifier)))
  (rad_block
    rad_type: (display_keyword)
    (rad_field_stmt
      (identifier)
      (identifier)
      (identifier)))
  (assign
    left: (var_path
      root: (identifier))
    right: (expr
      (primary_expr
        (list_comprehension
          expr: (expr
            (primary_expr
              (binary_op
                left: (primary_expr
                  (var_path
                    root: (identifier)
                    indexing: (expr
                      (primary_expr
                        (var_path
                          root: (identifier))))))
                right: (primary_expr
                  (var_path
                    root: (identifier)
                    indexing: (expr
                      (primary_expr
                        (var_path
                          root: (identifier)))))))))
          left: (identifier)
          right: (expr
            (primary_expr
              (call
                func: (identifier)
                arg: (expr
                  (primary_expr
                    (var_path
                      root: (identifier)))))))))))
  (assign
    left: (var_path
      root: (identifier))
    right: (expr
      (primary_expr
        (literal
          (list
            list_entry: (expr
              (primary_expr
                (literal
                  (int))))
            list_entry: (expr
              (primary_expr
                (literal
                  (int))))
            list_entry: (expr
              (primary_expr
                (literal
                  (int)))))))))
  (expr_stmt
    (expr
      (primary_expr
        (call
          func: (identifier)
          arg: (expr
            (primary_expr
              (call
                func: (identifier)
                arg: (expr
                  (primary_expr
                    (var_path
                      root: (identifier))))
                arg: (expr
                  (primary_expr
                    (literal
                      (string
                        start: (string_start)
                        contents: (string_contents
                          content: (string_content))
                        end: (string_end))))))))))))
  (expr_stmt
    (expr
      (primary_expr
        (call
          func: (identifier)
          arg: (expr
            (primary_expr
              (call
                func: (identifier)
                arg: (expr
                  (primary_expr
                    (var_path
                      root: (identifier))))
                arg: (expr
                  (primary_expr
                    (literal
                      (string
                        start: (string_start)
                        contents: (string_contents
                          content: (string_content))
                        end: (string_end)))))
                arg: (expr
                  (primary_expr
                    (literal
                      (string
                        start: (string_start)
                        contents: (string_contents
                          content: (string_content))
                        end: (string_end))))))))))))
  (expr_stmt
    (expr
      (primary_expr
        (call
          func: (identifier)
          arg: (expr
            (primary_expr
              (call
                func: (identifier)
                arg: (expr
                  (primary_expr
                    (var_path
                      root: (identifier))))
                arg: (expr
                  (primary_expr
                    (literal
                      (string
                        start: (string_start)
                        contents: (string_contents
                          content: (string_content))
                        end: (string_end)))))
                arg: (expr
                  (primary_expr
                    (literal
                      (string
                        start: (string_start)
                        contents: (string_contents
                          content: (string_content))
                        end: (string_end)))))
                arg: (expr
                  (primary_expr
                    (literal
                      (string
                        start: (string_start)
                        contents: (string_contents
                          content: (string_content))
                        end: (string_end))))))))))))
  (assign
    left: (var_path
      root: (identifier))
    right: (expr
      (primary_expr
        (var_path
          root: (identifier)
          indexing: (slice)))))
  (assign
    left: (var_path
      root: (identifier))
    right: (expr
      (primary_expr
        (var_path
          root: (identifier)
          indexing: (slice
            start: (expr
              (primary_expr
                (literal
                  (int)))))))))
  (assign
    left: (var_path
      root: (identifier))
    right: (expr
      (primary_expr
        (var_path
          root: (identifier)
          indexing: (slice
            start: (expr
              (primary_expr
                (literal
                  (int))))
            end: (expr
              (primary_expr
                (literal
                  (int)))))))))
  (assign
    left: (var_path
      root: (identifier))
    right: (expr
      (primary_expr
        (var_path
          root: (identifier)
          indexing: (slice
            end: (expr
              (primary_expr
                (literal
                  (int)))))))))
  (assign
    left: (var_path
      root: (identifier))
    right: (expr
      (primary_expr
        (literal
          (map
            map_entry: (map_entry
              key: (expr
                (primary_expr
                  (literal
                    (string
                      start: (string_start)
                      contents: (string_contents
                        content: (string_content))
                      end: (string_end)))))
              value: (expr
                (primary_expr
                  (literal
                    (string
                      start: (string_start)
                      contents: (string_contents
                        content: (string_content))
                      contents: (interpolation
                        expr: (expr
                          (primary_expr
                            (var_path
                              root: (identifier)))))
                      end: (string_end)))))))))))
  (assign
    left: (var_path
      root: (identifier))
    right: (expr
      (primary_expr
        (call
          func: (identifier)
          arg: (expr
            (primary_expr
              (var_path
                root: (identifier))))
          arg: (expr
            (primary_expr
              (var_path
                root: (identifier))))
          named_arg: (call_named_arg
            name: (identifier)
            value: (expr
              (primary_expr
                (var_path
                  root: (identifier)))))))))
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (assign
    left: (var_path
      root: (identifier))
    right: (expr
      (primary_expr
        (literal
          (string
            start: (string_start)
            contents: (string_contents
              content: (string_content))
            end: (string_end))))))
  (assign
    left: (var_path
      root: (identifier))
    right: (expr
      (primary_expr
        (literal
          (string
            start: (string_start)
            contents: (string_contents
              content: (string_content))
            end: (string_end))))))
  (assign
    left: (var_path
      root: (identifier))
    right: (expr
      (primary_expr
        (literal
          (string
            start: (string_start)
            contents: (string_contents
              content: (string_content))
            end: (string_end))))))
  (assign
    left: (var_path
      root: (identifier))
    left: (var_path
      root: (identifier))
    right: (expr
      (primary_expr
        (call
          func: (identifier)
          arg: (expr
            (primary_expr
              (literal
                (string
                  start: (string_start)
                  contents: (string_contents
                    content: (string_content))
                  end: (string_end)))))
          arg: (expr
            (primary_expr
              (var_path
                root: (identifier))))))))
  (expr_stmt
    (expr
      (primary_expr
        (call
          func: (identifier)
          arg: (expr
            (primary_expr
              (literal
                (string
                  start: (string_start)
                  contents: (string_contents
                    content: (string_content))
                  contents: (interpolation
                    expr: (expr
                      (primary_expr
                        (var_path
                          root: (identifier)))))
                  contents: (string_contents
                    content: (string_content))
                  contents: (interpolation
                    expr: (expr
                      (primary_expr
                        (var_path
                          root: (identifier)))))
                  end: (string_end)))))))))
  (expr_stmt
    (expr
      (shell_cmd
        critical: (critical_shell_cmd
          command: (expr
            (primary_expr
              (literal
                (string
                  start: (string_start)
                  contents: (string_contents
                    content: (string_content))
                  end: (string_end)))))))))
  (assign
    left: (var_path
      root: (identifier))
    right: (expr
      (primary_expr
        (literal
          (string
            start: (string_start)
            contents: (string_contents
              content: (string_content))
            contents: (interpolation
              expr: (expr
                (primary_expr
                  (var_path
                    root: (identifier)))))
            end: (string_end))))))
  (expr_stmt
    (expr
      (shell_cmd
        checked: (checked_shell_cmd
          command: (expr
            (primary_expr
              (var_path
                root: (identifier))))
          body_type: (shell_body_type)
          (expr_stmt
            (expr
              (primary_expr
                (call
                  func: (identifier)
                  arg: (expr
                    (primary_expr
                      (literal
                        (string
                          start: (string_start)
                          contents: (string_contents
                            content: (string_content))
                          end: (string_end)))))))))))))
  (expr_stmt
    (expr
      (shell_cmd
        checked: (checked_shell_cmd
          command: (expr
            (primary_expr
              (var_path
                root: (identifier))))
          body_type: (shell_body_type)
          (expr_stmt
            (expr
              (primary_expr
                (call
                  func: (identifier)
                  arg: (expr
                    (primary_expr
                      (literal
                        (string
                          start: (string_start)
                          contents: (string_contents
                            content: (string_content))
                          end: (string_end)))))))))))))
  (expr_stmt
    (expr
      (shell_cmd
        unsafe: (unsafe_shell_cmd
          command: (expr
            (primary_expr
              (literal
                (string
                  start: (string_start)
                  contents: (string_contents
                    content: (string_content))
                  end: (string_end)))))))))
  (assign
    left: (var_path
      root: (identifier))
    right: (expr
      (shell_cmd
        critical: (critical_shell_cmd
          command: (expr
            (primary_expr
              (var_path
                root: (identifier))))))))
  (assign
    left: (var_path
      root: (identifier))
    left: (var_path
      root: (identifier))
    right: (expr
      (shell_cmd
        critical: (critical_shell_cmd
          command: (expr
            (primary_expr
              (var_path
                root: (identifier))))))))
  (assign
    left: (var_path
      root: (identifier))
    left: (var_path
      root: (identifier))
    left: (var_path
      root: (identifier))
    right: (expr
      (shell_cmd
        critical: (critical_shell_cmd
          command: (expr
            (primary_expr
              (var_path
                root: (identifier))))))))
  (assign
    left: (var_path
      root: (identifier))
    left: (var_path
      root: (identifier))
    left: (var_path
      root: (identifier))
    right: (expr
      (shell_cmd
        critical: (critical_shell_cmd
          command: (expr
            (primary_expr
              (var_path
                root: (identifier))))))))
  (expr_stmt
    (expr
      (shell_cmd
        critical: (critical_shell_cmd
          command: (expr
            (primary_expr
              (literal
                (string
                  start: (string_start)
                  contents: (string_contents
                    content: (string_content))
                  contents: (interpolation
                    expr: (expr
                      (primary_expr
                        (var_path
                          root: (identifier)))))
                  contents: (string_contents
                    content: (string_content))
                  end: (string_end)))))))))
  (expr_stmt
    (expr
      (shell_cmd
        unsafe: (unsafe_shell_cmd
          command: (expr
            (primary_expr
              (literal
                (string
                  start: (string_start)
                  contents: (string_contents
                    content: (string_content))
                  contents: (interpolation
                    expr: (expr
                      (primary_expr
                        (var_path
                          root: (identifier)))))
                  contents: (string_contents
                    content: (string_content))
                  end: (string_end)))))))))
  (expr_stmt
    (expr
      (shell_cmd
        unsafe: (unsafe_shell_cmd
          command: (expr
            (primary_expr
              (literal
                (string
                  start: (string_start)
                  contents: (string_contents
                    content: (string_content))
                  contents: (interpolation
                    expr: (expr
                      (primary_expr
                        (var_path
                          root: (identifier)))))
                  contents: (string_contents
                    content: (string_content))
                  end: (string_end)))))))))
  (defer_block
    (expr_stmt
      (expr
        (shell_cmd
          critical: (critical_shell_cmd
            command: (expr
              (primary_expr
                (literal
                  (string
                    start: (string_start)
                    contents: (string_contents
                      content: (string_content))
                    end: (string_end)))))))))
    (expr_stmt
      (expr
        (primary_expr
          (call
            func: (identifier)
            arg: (expr
              (primary_expr
                (literal
                  (string
                    start: (string_start)
                    contents: (string_contents
                      content: (string_content))
                    end: (string_end))))))))))
  (expr_stmt
    (expr
      (shell_cmd
        critical: (critical_shell_cmd
          command: (expr
            (primary_expr
              (literal
                (string
                  start: (string_start)
                  contents: (string_contents
                    content: (string_content))
                  contents: (interpolation
                    expr: (expr
                      (primary_expr
                        (var_path
                          root: (identifier)))))
                  contents: (string_contents
                    content: (string_content))
                  contents: (interpolation
                    expr: (expr
                      (primary_expr
                        (var_path
                          root: (identifier)))))
                  end: (string_end)))))))))
  (errdefer_block
    (expr_stmt
      (expr
        (primary_expr
          (call
            func: (identifier)
            arg: (expr
              (primary_expr
                (literal
                  (string
                    start: (string_start)
                    contents: (string_contents
                      content: (string_content))
                    end: (string_end)))))))))
    (expr_stmt
      (expr
        (shell_cmd
          critical: (critical_shell_cmd
            command: (expr
              (primary_expr
                (literal
                  (string
                    start: (string_start)
                    contents: (string_contents
                      content: (string_content))
                    contents: (interpolation
                      expr: (expr
                        (primary_expr
                          (var_path
                            root: (identifier)))))
                    end: (string_end))))))))))
  (if_stmt
    condition: (expr
      (primary_expr
        (literal
          (bool))))
    (comment)
    (expr_stmt
      (expr
        (primary_expr
          (call
            func: (identifier)
            arg: (expr
              (primary_expr
                (literal
                  (string
                    start: (string_start)
                    contents: (string_contents
                      content: (string_content))
                    end: (string_end)))))))))
    (expr_stmt
      (expr
        (primary_expr
          (call
            func: (identifier)
            arg: (expr
              (primary_expr
                (literal
                  (int)))))))))
  (expr_stmt
    (expr
      (shell_cmd
        critical: (critical_shell_cmd
          command: (expr
            (primary_expr
              (literal
                (string
                  start: (string_start)
                  contents: (string_contents
                    content: (string_content))
                  contents: (interpolation
                    expr: (expr
                      (primary_expr
                        (var_path
                          root: (identifier)))))
                  end: (string_end)))))))))
  (errdefer_block
    (expr_stmt
      (expr
        (primary_expr
          (call
            func: (identifier)
            arg: (expr
              (primary_expr
                (literal
                  (string
                    start: (string_start)
                    contents: (string_contents
                      content: (string_content))
                    contents: (interpolation
                      expr: (expr
                        (primary_expr
                          (var_path
                            root: (identifier)))))
                    contents: (string_contents
                      content: (string_content))
                    end: (string_end)))))))))
    (assign
      left: (var_path
        root: (identifier))
      left: (var_path
        root: (identifier))
      right: (expr
        (shell_cmd
          critical: (critical_shell_cmd
            command: (expr
              (primary_expr
                (literal
                  (string
                    start: (string_start)
                    contents: (string_contents
                      content: (string_content))
                    contents: (interpolation
                      expr: (expr
                        (primary_expr
                          (var_path
                            root: (identifier)))))
                    end: (string_end))))))))))
  (if_stmt
    condition: (expr
      (primary_expr
        (literal
          (bool))))
    (comment)
    (expr_stmt
      (expr
        (primary_expr
          (call
            func: (identifier)
            arg: (expr
              (primary_expr
                (literal
                  (string
                    start: (string_start)
                    contents: (string_contents
                      content: (string_content))
                    end: (string_end)))))))))
    (expr_stmt
      (expr
        (primary_expr
          (call
            func: (identifier)
            arg: (expr
              (primary_expr
                (literal
                  (int)))))))))
  (expr_stmt
    (expr
      (shell_cmd
        critical: (critical_shell_cmd
          command: (expr
            (primary_expr
              (literal
                (string
                  start: (string_start)
                  contents: (string_contents
                    content: (string_content))
                  contents: (interpolation
                    expr: (expr
                      (primary_expr
                        (var_path
                          root: (identifier)))))
                  contents: (string_contents
                    content: (string_content))
                  end: (string_end))))))))))
