===
Basic double quotes
===

a = "hi"

---

(source_file
  (assign
    left: (var_path)
    right: (expr
      base: (primary_expr
        (literal
          (string
            start: (string_start)
            contents: (string_contents
              content: (string_content))
            end: (string_end)))))))

===
Basic single quotes
===

a = 'hi'

---

(source_file
  (assign
    left: (var_path)
    right: (expr
      base: (primary_expr
        (literal
          (string
            start: (string_start)
            contents: (string_contents
              content: (string_content))
            end: (string_end)))))))

===
Basic backticks
===

a = `hi`

---

(source_file
  (assign
    left: (var_path)
    right: (expr
      base: (primary_expr
        (literal
          (string
            start: (string_start)
            contents: (string_contents
              content: (string_content))
            end: (string_end)))))))

===
Interpolation
===

"hello {name}"

---

(source_file
  (expr
    base: (primary_expr
      (literal
        (string
          start: (string_start)
          contents: (string_contents
            content: (string_content)
            interpolation: (interpolation
              expr: (expr
                base: (var_path))))
          end: (string_end))))))

===
Raw string
===

r"hello {name}"

---

(source_file
  (expr
    base: (primary_expr
      (literal
        (string
          start: (string_start)
          contents: (string_contents
            content: (string_content))
          end: (string_end))))))

===
Interpolation fancy
===

"hello {2 + 2}"

---

(source_file
  (expr
    base: (primary_expr
      (literal
        (string
          start: (string_start)
          contents: (string_contents
            content: (string_content)
            interpolation: (interpolation
              expr: (expr
                base: (primary_expr
                  (binary_op
                    left: (expr
                      base: (primary_expr
                        (literal
                          (int))))
                    right: (expr
                      base: (primary_expr
                        (literal
                          (int)))))))))
          end: (string_end))))))

===
Nested double quotes
===

"'hello'"
"`hello`"

---

(source_file
  (expr
    base: (primary_expr
      (literal
        (string
          start: (string_start)
          contents: (string_contents
            content: (string_content))
          end: (string_end)))))
  (expr
    base: (primary_expr
      (literal
        (string
          start: (string_start)
          contents: (string_contents
            content: (string_content))
          end: (string_end))))))

===
Nested single quotes
===

'"hello"'
'`hello`'

---

(source_file
  (expr
    base: (primary_expr
      (literal
        (string
          start: (string_start)
          contents: (string_contents
            content: (string_content))
          end: (string_end)))))
  (expr
    base: (primary_expr
      (literal
        (string
          start: (string_start)
          contents: (string_contents
            content: (string_content))
          end: (string_end))))))

===
Nested backtick
===

`"hello"`
`'hello'`

---

(source_file
  (expr
    base: (primary_expr
      (literal
        (string
          start: (string_start)
          contents: (string_contents
            content: (string_content))
          end: (string_end)))))
  (expr
    base: (primary_expr
      (literal
        (string
          start: (string_start)
          contents: (string_contents
            content: (string_content))
          end: (string_end))))))

===
Empty
===

""
''
``

---

(source_file
  (expr
    base: (primary_expr
      (literal
        (string
          start: (string_start)
          end: (string_end)))))
  (expr
    base: (primary_expr
      (literal
        (string
          start: (string_start)
          end: (string_end)))))
  (expr
    base: (primary_expr
      (literal
        (string
          start: (string_start)
          end: (string_end))))))
